{"version":3,"sources":["components/Fire/Fire.jsx","components/CubePhysical.jsx","components/Plane/PlaneModel.jsx","components/Plane/Plane.jsx","hooks/useKeyboard.js","state.js","components/PlayerModel/BoundingBox.jsx","components/PlayerModel/PlayerModel.jsx","components/SkyBox/SkyBox.jsx","utils/getRandom.js","Scenes/Scene1.js","components/SocketClient.jsx","Scenes/Scene2.js","App.js","reportWebVitals.js","index.js"],"names":["Fire","props","colorMap","useTexture","fallback","scale","map","alphaMap","CubePhysical","useBox","mass","position","velocity","ref","PlaneModel","modelRef","useRef","model","useLoader","GLTFLoader","process","path","rotation","Math","PI","object","scene","Plane","usePlane","moveFieldByKey","key","KeyW","KeyS","KeyA","KeyD","Space","$player","atom","default","$socket","undefined","BoundingBoxPhysical","offset","dims","visible","children","args","api","useRecoilValue","pPosition","useFrame","clock","set","wireframe","PlayerModel","mixer","orbitRef","useState","animState","setAnimState","moveForward","moveBackward","moveLeft","moveRight","jump","movement","setMovement","useEffect","handleKeyDown","e","m","code","handleKeyUp","document","addEventListener","removeEventListener","useKeyboard","setPlayerPosition","useSetRecoilState","camera","useThree","action_idle","AnimationMixer","clipAction","animations","idleIndex","action_walk","walkIndex","length","stopAllAction","delta","update","direction","Vector3","frontVector","Number","sideVector","subVectors","normalize","multiplyScalar","applyEuler","pos","newPosition","x","z","camRotation","toArray","current","target","y","setLoop","LoopRepeat","play","up","BoundingBox","OrbitControls","imagePaths","img","Scene","paths","mat","THREE","load","background","environment","useSkybox","random","min","max","console","log","sin","intensity","color","minDistance","maxDistance","Array","fill","ji","Scene1","Stats","SocketClient","socket","io","connect","transports","counter","messages","setMessages","useRecoilState","setSock","on","msg","emit","info","data","onClick","item","index","Scene2","App","mode","setMode","style","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1f787c20.chunk.js","sourcesContent":["import { useTexture } from \"@react-three/drei\"\nimport { Suspense } from \"react\"\n\nfunction Fire(props) {\n  const colorMap = useTexture('assets/fire/fire.png')\n\n    return (\n      <Suspense fallback={null} >\n        <sprite scale={2} {...props}>\n          <spriteMaterial map={colorMap} alphaMap={colorMap}/>\n        </sprite>\n      </Suspense>\n    )\n}\n  \nexport default Fire","import  { useBox } from \"@react-three/cannon\";\nimport Fire from \"./Fire/Fire\";\n\nfunction CubePhysical(props) {\n  const [ref] = useBox(() => ({ mass: 0.2, position: [0, 5, 0], velocity: [0, 4, 0], ...props }));\n  \n  return (\n    <>\n      <Fire/>\n      <mesh ref={ref}>\n        <boxBufferGeometry />\n        <meshPhysicalMaterial />\n      </mesh>\n      </>\n    );\n}\n  \nexport default CubePhysical;","\nimport { useLoader } from '@react-three/fiber';\nimport { useRef } from 'react';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nconst PlaneModel = props => {\n    const modelRef = useRef();\n\n    const model = useLoader(\n            GLTFLoader,\n            process.env.PUBLIC_URL + props.path\n        )\n   \n  return (\n      <group ref={modelRef}  >\n        <mesh rotation={[Math.PI / 2,0, 0]} >\n            {/* <meshPhysicalMaterial wireframe /> */}\n            <primitive object={model.scene} scale={[1.5,1.5,1.5]} position={props.position} />;\n         </mesh>\n    </group>\n  )  \n}\n\nexport default PlaneModel","import { usePlane } from \"@react-three/cannon\";\n// import PlainAnimModel from \"./PlainAnimModel\";\nimport PlaneModel from \"./PlaneModel\";\n\n\nfunction Plane(props) {\n    const [ref] = usePlane(() => ({ rotation: [- Math.PI / 2, 0, 0], ...props }));\n    return (\n      <mesh ref={ref}>\n        <PlaneModel path=\"/assets/map2/BASKETBALL/BASKETBALL.gltf\" position={[15,-24,13]}/>\n        <PlaneModel path=\"/assets/map2/BASE2/BASE.gltf\" position={[15,-24,13]}/>\n        <PlaneModel path=\"/assets/map2/TEST/TEST.gltf\" position={[15,-24,13]}/>\n        {/* <PlainAnimModel path=\"/assets/water/ocean_wave_test.gltf\"/> */}\n        {/* <planeBufferGeometry args={[100, 100]} /> */}\n      </mesh>\n    );\n}\n\n\nexport default Plane\n\n  \n","import { useState, useEffect } from \"react\";\n\nfunction moveFieldByKey(key) {\n  const keys = {\n    KeyW: \"moveForward\",\n    KeyS: \"moveBackward\",\n    KeyA: \"moveLeft\",\n    KeyD: \"moveRight\",\n    Space: \"jump\",\n  };\n  return keys[key];\n}\n\nexport const useKeyboard = () => {\n  const [movement, setMovement] = useState({\n    moveForward: false,\n    moveBackward: false,\n    moveLeft: false,\n    moveRight: false,\n    jump: false,\n  });\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      setMovement((m) => ({\n        ...m,\n        [moveFieldByKey(e.code)]: true,\n      }));\n    };\n    const handleKeyUp = (e) => {\n      setMovement((m) => ({\n        ...m,\n        [moveFieldByKey(e.code)]: false,\n      }));\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    document.addEventListener(\"keyup\", handleKeyUp);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      document.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, []);\n\n  return movement;\n};\n","import { atom } from 'recoil';\n\nexport const $player = atom({\n  key: 'position',\n  default: {position:[0,0,0], rotation:[0,0,0]}\n});\n\nexport const $camera = atom({\n  key: 'camera',\n  default: {position:[0,0,0], rotation:[0,0,0]}\n});\n\n\nexport const $socket = atom({\n  key: 'socket',\n  default: undefined\n});\n","import { useBox } from \"@react-three/cannon\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useRecoilValue } from \"recoil\";\nimport { $player } from \"../../state\";\n\nconst BoundingBoxPhysical = ({\n  position = [0, 0, 0],\n  offset = [0, 0, 0],\n  dims = [1, 1, 1],\n  visible = false,\n  children,\n}) => {\n  const [ref, api] = useBox(() => ({ mass: 1, args: dims, position }));\n  const {position:pPosition, rotation} = useRecoilValue($player);\n\n\n  useFrame(({ clock }) => {\n    api.position.set(\n      pPosition[0],pPosition[1],pPosition[2]\n    );\n    api.rotation.set(\n      rotation[0], rotation[1], rotation[2]\n    );\n  });\n  \n\n\n  return (\n    <group ref={ref} api={api}>\n      <mesh scale={dims} visible={visible}>\n        <boxBufferGeometry />\n        <meshPhysicalMaterial wireframe />\n      </mesh>\n      <group position={offset}>{children}</group>\n    </group>\n  );\n};\n\nexport default BoundingBoxPhysical;\n","import { FirstPersonControls, FlyControls, OrbitControls, PerspectiveCamera, PointerLockControls, TrackballControls } from \"@react-three/drei\";\nimport { useFrame, useLoader, useThree } from \"@react-three/fiber\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { AnimationMixer, LoopRepeat, Vector3 } from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { useKeyboard } from \"../../hooks/useKeyboard\";\nimport { $player } from \"../../state\";\nimport BoundingBox from \"./BoundingBox\";\n\nconst PlayerModel = (props) => {\n\n  const orbitRef = useRef()\n  const [animState, setAnimState] = useState(0);\n\n  const modelRef = useRef();\n  const {\n    moveForward,\n    moveBackward,\n    moveLeft,\n    moveRight,} = useKeyboard()\n\n  const { path } = props;\n  const model = useLoader(GLTFLoader, path);\n\n  const setPlayerPosition = useSetRecoilState($player);\n\n  const { camera } = useThree();\n  \n  let mixer;\n  mixer = new AnimationMixer(model.scene);\n  const action_idle = mixer.clipAction(model.animations[props.idleIndex ?? 0]);\n  const action_walk = mixer.clipAction(model.animations[props.walkIndex ?? 1]);\n  if (model.animations.length > 0) {\n    mixer.stopAllAction();\n  }\n\n  useFrame((scene, delta) => {\n    if (moveForward | moveBackward | moveLeft | moveRight) {\n      setAnimState(1) // 1 : walk\n    }\n    else setAnimState(0) // 0: idle\n    mixer.update(delta);\n  });\n\n  useFrame(({ clock }) => {\n    const direction = new Vector3();\n    const frontVector = new Vector3(\n      0,\n      0,\n      Number(moveBackward) - Number(moveForward)\n      );\n      const sideVector = new Vector3(Number(moveLeft) - Number(moveRight), 0, 0);\n      direction\n      .subVectors(frontVector, sideVector)\n      .normalize()\n      .multiplyScalar(0.1)\n      .applyEuler(camera.rotation);\n      \n      setPlayerPosition(pos => {\n        \n        const newPosition = [\n          pos.position[0] + direction.x,\n          1,\n          pos.position[2] + direction.z,\n        ]\n        const camRotation = camera.rotation.toArray()\n        orbitRef.current.target.position = (new Vector3(newPosition[0], camera.position.y, newPosition[2]));\n        return {\n          position:newPosition,\n          rotation: [0, (camRotation[2]+Math.PI), 0]\n        }\n      });\n    }\n  );\n\n  useEffect(() => {\n    mixer.stopAllAction();\n    switch (animState) {\n      case 1:\n        action_walk.setLoop(LoopRepeat);    \n        action_walk.play();\n        break;\n      default:\n        action_idle.setLoop(LoopRepeat);\n        action_idle.play();\n      break;\n    }\n}, [animState,action_walk,action_idle, mixer])\n\n  return (\n    <group ref={modelRef} up={[0, 1, 0]}>\n      <BoundingBox\n        visible\n        up={[0, 0, 0]}\n        position={[0, 2.4, 0]}\n        dims={[1.5, 2, 1.5]}\n        rotation={[0, 0, 0]}\n      >\n        <OrbitControls ref={orbitRef}/>\n        <primitive\n          object={model.scene}\n          path={props.path}\n          scale={[2, 2, 2]}\n          position={[0, -1, 0]}\n        />\n      </BoundingBox>\n    </group>\n  );\n};\n\nexport default PlayerModel;\n","import React, { Suspense, useEffect, useRef } from \"react\";\nimport { useThree , Canvas} from \"@react-three/fiber\";\nimport * as THREE from \"three\";\n// import { DoubleSide } from \"three\";\n\n// function Thing() {\n//   const ref = useRef<typeof Box>();\n//   useFrame(\n//     () =>\n//       ref.current && (ref.current.rotation.x = ref.current.rotation.y += 0.01)\n//   );\n//   return (\n//     <Box\n//       ref={ref}\n//       args={[1, 1, 1]}\n//       onClick={(e) => console.log(\"click\")}\n//       onPointerOver={(e) => console.log(\"hover\")}\n//       onPointerOut={(e) => console.log(\"unhover\")}\n//     >\n//       <meshNormalMaterial attach=\"material\" />\n//     </Box>\n//   );\n// }\n\n// const path = \"/assets/city-sky/\";\n// const images = ['back','front',  'top', 'bottom',  'left', 'right',]\n\n// const images = [\"nx1.jpg\", \"px2.png\",\"ny1.jpg\",\"py2.jpg\",\"pz2.png\",\"nz1.png\" ,];\n\nconst path = \"/assets/skyboxes/city/\";\nconst images = [\"px.png\",\"nx.png\", \"py.png\",\"ny.png\",\"nz.png\",\"pz.png\"];\n\n// const ext = \".png\";\n\nconst imagePaths = images.map((img) => path + img );\n\n// function Planet() {\n//   const { scene, scenes, animations, cameras, asset, materials } = useLoader(\n//     GLTFLoader,\n//     \"./Earth/CHAHIN_EARTH.gltf\"\n//   );\n\n//   const ref = useRef();\n\n//   useFrame(() => ref.current && (ref.current.rotation.y += 0.01));\n\n//   return <primitive ref={ref} object={scene} />;\n// }\n\nconst useSkybox = (paths) => {\n  const { scene } = useThree();\n\n  useEffect(() => {\n    const loader = new THREE.CubeTextureLoader();\n    const mat = loader.load(paths);\n    scene.background = mat;\n    scene.environment = mat;\n  }, [paths, scene.background, scene]);\n\n  return null;\n};\n\nexport function Scene() {\n  useSkybox(imagePaths);\n\n  return (\n    <>\n      {/* <ambientLight />\n      <pointLight ref={light} args={[2, 2, 2]} /> */}\n      {/* <Text fontSize={1}>spaceyboi</Text> */}\n      {/* <Dodecahedron args={[10]}> */}\n        {/* <meshPhysicalMaterial\n          color=\"white\"\n          metalness={0.99}\n          roughness={0.012}\n          transparency={0.5}\n          refractionRatio={0.82}\n          transparent\n          side={DoubleSide}\n        /> */}\n      {/* </Dodecahedron> */}\n      {/* <Planet /> */}\n    </>\n  );\n}\n\nexport function SkyBoxApp() {\n  return (\n    <Canvas style={{ background: \"black\" }} camera={{ position: [0, 0, 25] }}>\n      <Suspense fallback={null}>\n        <Scene />\n        {/* <Effects /> */}\n      </Suspense>\n    </Canvas>\n  );\n}\n","\n\nexport function random(min, max) {\n return   Math.random() * (max - min) + min\n}\n\nexport function randomInt(min, max) {\n    return random(min, max).floor();\n}\n\nexport function randomVec3(min, max) { \n    return [random(-1, 1), random(-1, 1), random(-1, 1)];\n}","// import Box from './components/Box';\nimport { Physics } from \"@react-three/cannon\";\nimport { OrbitControls, Stats } from \"@react-three/drei\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { Suspense, useRef } from \"react\";\nimport { RecoilRoot } from \"recoil\";\nimport { Vector3 } from \"three\";\nimport \"./Scene1.css\";\nimport CubePhysical from \"../components/CubePhysical\";\nimport Plane from \"../components/Plane/Plane\";\nimport PlayerModel from \"../components/PlayerModel/PlayerModel\";\nimport { Scene as SkyBoxcene } from \"../components/SkyBox/SkyBox\";\nimport { random } from \"../utils/getRandom\";\n\nfunction Scene() {\n\n  const orbitRef = useRef();\n  useFrame((clock) => {\n    console.log('orbitRef.current.target.position', orbitRef.current.target.position)\n    orbitRef.current.target.position = new Vector3(3*Math.sin(clock*0.5), 0, 0)\n    orbitRef.current.update();\n  })\n\n  return <>\n    <ambientLight intensity={0.2} />\n<pointLight position={[70, 100, 0]} color=\"blue\" intensity={20} />\n  <pointLight position={[-70, 80, -20]} color=\"pink\" intensity={20} />\n  {/* todo: use camera of recoil and update its target position, use lookat ? or worldDrirection ? and compute its direction */}\n    <OrbitControls ref={orbitRef} minDistance={1} maxDistance={20} target={[0,2.5,0]}/>\n    <SkyBoxcene/>\n    <Suspense fallback={null}>\n      <Plane />\n      {new Array(15).fill(0).map((ji) => {\n        return (\n          <CubePhysical\n            position={[random(-4, 4), random(1, 10), random(-4, 4)]}\n            scale={[0.1, 0.1, 0.15]}\n            rotation={[random(0.1, 25), 0, 0]}\n          />\n        );\n      })}\n      <PlayerModel path={process.env.PUBLIC_URL + \"assets/marie_survivor/scene.gltf\"} walkIndex={15} idleIndex={0}/>\n      {/* <PlayerSimpleModel path={process.env.PUBLIC_URL + \"assets/marie_survivor/scene.gltf\"} /> */}\n    </Suspense>\n</>\n}\n\n\nfunction Scene1() {\n  return (\n    <>\n      <Canvas camera={{ position: [7, 7, 7] }}>\n        <RecoilRoot>\n          <Physics>\n            <Scene/>\n          </Physics>\n          <Stats />\n        </RecoilRoot>\n       </Canvas>\n    </>\n  );\n}\n\nexport default Scene1;\n","/*ignore*/\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport io from \"socket.io-client\";\nimport { $socket } from \"../state\";\n\n\n    \n\nexport default function SocketClient() {\n  const socket = io.connect(\n    \"http://localhost:9000\", {\n          transports: [\"websocket\"],\n    }\n  );\n  const [counter, setCounter] = useState(0);\n  const [messages, setMessages] = useState([\"yo\"]);\n\n  const [sock, setSock] = useRecoilState($socket)\n  setSock(socket)\n\n  const addMessage = (data) => {\n    setMessages((messages) => [...messages, data]);\n  };\n\n\n\n  \n  \n  useEffect(() => {\n    socket.on(\"connect\", (msg) => {\n      socket.emit(\"message-client\", `연결됨.`);\n      console.log(\"connected\", msg);\n      socket.emit(\"name\", \"Tom\");\n    });\n    socket.on(\"seq-num\", (msg) => {\n      // setCounter(msg)\n      console.info(msg)\n    });\n    socket.on(\"message\", (msg) => {\n      // addMessage(msg);\n      console.info(msg);\n    });\n    return socket.emit('end');\n  }, [])\n  \n  \n  useEffect(() => {\n    // socket.emit(\"msg\", `count ${counter}`);\n    addMessage(`count ${counter}`);\n  }, [counter]);\n\n  return <div>\n    <button onClick={() => { socket.emit(\"message-client\", \"Tom\"); }}>\n      asdfa\n    </button>\n    {messages.map((item, index) => <div key={`${item}-${index}`}>{item}<br />\n    </div>)}\n  </div>;\n}\n","import SocketClient from \"../components/SocketClient\";\n\nfunction Scene2() { \n  return (\n    <>\n    <SocketClient/>\n    </>\n  );\n}\n\nexport default Scene2;\n","// import Box from './components/Box';\nimport { useState } from \"react\";\nimport Scene1 from \"./Scenes/Scene1\";\nimport Scene2 from \"./Scenes/Scene2\";\n\nfunction App() {\n  const [mode, setMode] = useState(0)\n  return (\n    <div style={{width:'100%', height:'100%'}}>\n      {\n        mode === 1 ?\n          <Scene1 /> :\n        mode === 2 ?\n          <Scene2 /> :\n          (<><button onClick={() => setMode(1)}>\n            시작하기1\n          </button><button onClick={() => setMode(2)}>\n            시작하기2\n          </button></>)\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}